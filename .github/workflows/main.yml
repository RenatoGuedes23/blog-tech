# .github/workflows/deploy_to_ecr.yml
name: CI - Build and Push Docker Image to ECR (Access Keys - Tag Latest)

on:
  push:
    branches:
      - main
  workflow_dispatch:

# A permissão id-token: write foi removida para evitar confusão com a autenticação por chaves de acesso.
# Se você tiver outros passos que necessitem de OIDC, esta seção precisará ser ajustada.
permissions:
  contents: read # Necessário para actions/checkout

env:
  AWS_REGION: us-east-1 # Substitua pela sua região da AWS onde o ECR está
  ECR_REPOSITORY: blog-tech-backend # Substitua pelo nome do seu repositório ECR

jobs:
  build-and-push-image:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using Access Keys
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }} # Alterado para corresponder ao seu exemplo Terraform
          aws-region: ${{ env.AWS_REGION }}
          # O parâmetro 'audience' não é usado e não deve ser inferido aqui.

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image tag to latest
        id: image_tag
        run: echo "TAG=latest" >> $GITHUB_ENV # Define a tag sempre como 'latest'

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: ${{ env.ECR_REPOSITORY }}
        run: |
          echo "ECR Registry: $ECR_REGISTRY"
          echo "Image Name: $IMAGE_NAME"
          echo "Image Tag: $TAG"

          # Ajuste o caminho do contexto de build se necessário (ex: ./backend)
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:$TAG ./backend
          
          echo "Pushing image $ECR_REGISTRY/$IMAGE_NAME:$TAG to ECR..."
          docker push $ECR_REGISTRY/$IMAGE_NAME:$TAG

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
